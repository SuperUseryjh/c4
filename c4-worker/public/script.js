document.addEventListener(\'DOMContentLoaded\', () => {\n    const loginContainer = document.getElementById(\'login-container\');\n    const gameContainer = document.getElementById(\'game-container\');\n    const usernameInput = document.getElementById(\'username-input\');\n    const loginButton = document.getElementById(\'login-button\');\n    const scoreDisplay = document.getElementById(\'score-display\');\n    const guessInput = document.getElementById(\'guess-input\');\n    const guessButton = document.getElementById(\'guess-button\');\n    const messageElement = document.getElementById(\'message\');\n\n    let sessionId = null;\n\n    loginButton.addEventListener(\'click\', async () => {\n        const username = usernameInput.value.trim();\n        if (username) {\n            try {\n                const response = await fetch(\'YOUR_WORKER_URL/login\', {\n                    method: \'POST\',\n                    headers: { \'Content-Type\': \'application/json\' },\n                    body: JSON.stringify({ username })\n                });\n                const data = await response.json();\n                if (response.ok) {\n                    sessionId = data.sessionId;\n                    loginContainer.style.display = \'none\';\n                    gameContainer.style.display = \'block\';\n                    messageElement.textContent = \`Welcome, \${username}!\`;\n                    // In a real app, you\'d fetch the initial score here\n                } else {\n                    messageElement.textContent = \`Login failed: \${data.error || response.statusText}\`;\n                }\n            } catch (error) {\n                messageElement.textContent = `Error during login: \${error.message}`;\n            }\n        } else {\n            messageElement.textContent = \'Please enter a username.\';\n        }\n    });\n\n    guessButton.addEventListener(\'click\', async () => {\n        const guess = parseInt(guessInput.value);\n        if (isNaN(guess) || guess < 1 || guess > 100) {\n            messageElement.textContent = \'Please enter a valid number between 1 and 100.\';\n            return;\n        }\n\n        if (!sessionId) {\n            messageElement.textContent = \'Please log in first.\';\n            return;\n        }\n\n        try {\n            const response = await fetch(\'YOUR_WORKER_URL/guess\', {\n                method: \'POST\',\n                headers: { \'Content-Type\': \'application/json\' },\n                body: JSON.stringify({ sessionId, guess })\n            });\n            const data = await response.json();\n\n            if (response.ok) {\n                if (data.correct) {\n                    messageElement.textContent = `Correct! The number was \${data.targetNumber}. Your score is now \${data.newScore}.`;\n                    scoreDisplay.textContent = data.newScore;\n                } else {\n                    messageElement.textContent = `Wrong! The number was \${data.targetNumber}. Try again.`;\n                }\n            } else {\n                messageElement.textContent = `Guess failed: \${data.error || response.statusText}`;\n            }\n        } catch (error) {\n            messageElement.textContent = `Error during guess: \${error.message}`;\n        }\n        guessInput.value = \'\';\n    });\n});\n